---
// Importation des données
import reviewsData from "../data/top_reviews.json";
import PrendreRendezVousButtonHome from "./PrendreRendezVousButtonHome.astro";

// Extraction des informations
const business = reviewsData.établissement;
const reviews = reviewsData.avis_top;
---

<section class="bg-gradient-to-b from-white to-[#FDE9E6]" client:idle>
  <div
    class="w-full max-w-6xl mx-auto p-6 bg-gradient-to-b from-white to-[#FDE9E6] rounded-lg"
  >
    <!-- En-tête avec informations sur l'établissement -->
    <div class="text-center mb-8">
      <h2 class="font-vibes mt-8 text-5xl font-normal text-[#B68E75] mb-2">
        L'expérience Monica Mariage racontée par nos clientes
      </h2>
      <p class="text-[#8B7569] text-lg mb-4">
        <span class="text-[#B68E75]">★★★★</span><span class="text-[#B68E75]"
          >☆</span
        >
        {business.note_moyenne} / 5 ({business.nombre_avis} avis)
      </p>
      <p class="text-[#5F4B3F] text-center max-w-2xl mx-auto">
        Découvrez les avis de nos clientes ayant trouvé leur robe de mariée sur
        mesure dans notre showroom privé à Toulouse.
      </p>
    </div>

    <!-- Container pour le carrousel avec indication visuelle -->
    <div class="relative overflow-hidden px-1">
      <!-- Indication de swipe sur mobile -->
      <div
        class="absolute top-1/2 left-0 right-0 -translate-y-1/2 pointer-events-none z-10 md:hidden"
      >
        <div class="flex justify-between px-2 opacity-60">
          <div class="bg-white/80 p-2 rounded-full shadow-sm">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="20"
              height="20"
              viewBox="0 0 24 24"
              fill="none"
              stroke="#B68E75"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
            >
              <path d="M15 18l-6-6 6-6"></path>
            </svg>
          </div>
          <div class="bg-white/80 p-2 rounded-full shadow-sm">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="20"
              height="20"
              viewBox="0 0 24 24"
              fill="none"
              stroke="#B68E75"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
            >
              <path d="M9 18l6-6-6-6"></path>
            </svg>
          </div>
        </div>
      </div>

      <!-- Carrousel -->
      <div id="reviews-carousel" class="keen-slider">
        {
          reviews.map((review) => (
            <div class="keen-slider__slide">
              <div
                class="bg-white rounded-lg p-5 shadow-sm border border-[#F0E6E2] 
                       md:transition-all md:duration-300 md:hover:translate-y-[-5px] md:hover:shadow-md
                       h-full mx-auto"
              >
                <div class="flex items-start gap-4 mb-4 pb-3 border-b border-[#F0E6E2]">
                  <img
                      loading="lazy"
          decoding="async"
                    src={review.photo_profil}
                    alt={`Photo de ${review.auteur}`}
                    class="w-12 h-12 rounded-full border-2 border-[#F7EFED] object-cover"
                  />
                  <div>
                    <h4 class="font-vibes text-lg font-medium text-[#5F4B3F]">
                      {review.auteur}
                    </h4>
                    <div class="flex items-center">
                      <span class="text-[#B68E75]">
                        {"★".repeat(review.note)}
                      </span>
                      <span class="text-[#B68E75] opacity-30">
                        {"☆".repeat(5 - review.note)}
                      </span>
                    </div>
                    <p class="text-sm text-[#8B7569]">{review.date}</p>
                  </div>
                </div>
                <p class="text-[#5F4B3F] font-cormorant leading-relaxed font-cormorant">
                  {review.texte.length > 180
                    ? `${review.texte.substring(0, 180)}...`
                    : review.texte}
                </p>
              </div>
            </div>
          ))
        }
        <!-- </div>

      <div class="flex justify-between items-center mt-6 relative">
        <button
          id="carousel-prev"
          class="bg-[#B68E75] text-white w-10 h-10 rounded-full flex items-center justify-center hover:bg-[#9E7962] hover:scale-110 active:scale-95 transition-all shadow-md"
          aria-label="Avis précédent"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="20"
            height="20"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <path d="M15 18l-6-6 6-6"></path>
          </svg>
        </button>

        <div id="carousel-dots" class="flex gap-3 items-center">
      </div>

      <button
        id="carousel-next"
        class="bg-[#B68E75] text-white w-10 h-10 rounded-full flex items-center justify-center hover:bg-[#9E7962] hover:scale-110 active:scale-95 transition-all shadow-md"
        aria-label="Avis suivant"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="20"
          height="20"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
        >
          <path d="M9 18l6-6-6-6"></path>
        </svg>
      </button>
    </div> -->
      </div>

      <!-- Bouton d'action -->
      <div class="text-center my-16">
        <PrendreRendezVousButtonHome />
      </div>

      <!-- CSS pour Keen Slider
      <link
        rel="stylesheet"
        href="/css/keen-slider.min.css"
      /> -->

      <style>
        /* @import url("https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;500;600&family=Cormorant+Garamond:wght@300;400;500&display=swap"); */

        /* Style pour les dots */
        .dot {
          width: 8px;
          height: 8px;
          border-radius: 50%;
          background: #d1bdb4;
          cursor: pointer;
          transition: all 0.3s ease;
        }

        .dot.active {
          width: 12px;
          height: 12px;
          background: #b68e75;
          box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        /* Animation pour indiquer que c'est un slider */
        @keyframes slideHint {
          0%,
          100% {
            opacity: 0.8;
          }
          50% {
            opacity: 0.3;
          }
        }

        .keen-slider {
          position: relative;
        }

        .keen-slider::after {
          content: "";
          position: absolute;
          top: 0;
          right: 0;
          bottom: 0;
          width: 30px;
          background: linear-gradient(
            90deg,
            rgba(253, 248, 247, 0) 0%,
            rgba(253, 248, 247, 0.8) 100%
          );
          z-index: 5;
          pointer-events: none;
          animation: slideHint 2s infinite;
        }

        .keen-slider::before {
          content: "";
          position: absolute;
          top: 0;
          left: 0;
          bottom: 0;
          width: 30px;
          background: linear-gradient(
            270deg,
            rgba(253, 248, 247, 0) 0%,
            rgba(253, 248, 247, 0.8) 100%
          );
          z-index: 5;
          pointer-events: none;
          animation: slideHint 2s infinite;
        }
      </style>

      <script defer >
        document.addEventListener("DOMContentLoaded", function () {
          // Charger Keen Slider
          const script = document.createElement("script");
          script.src =
            "https://cdn.jsdelivr.net/npm/keen-slider@6.8.5/keen-slider.min.js";
          script.onload = initCarousel;
          document.body.appendChild(script);

          function initCarousel() {
            // Configuration pour le défilement continu
            const animation = { duration: 60000, easing: (t) => t };

            // Initialiser le carousel
            // Initialiser le carousel
            const carousel = new KeenSlider("#reviews-carousel", {
              loop: true,
              renderMode: "performance",
              drag: true,
              // mode: "free",
              slides: {
                perView: () => getResponsiveSlideCount(),
                spacing: 16,
              },
              created(s) {
                s.moveToIdx(5, true, animation);
                createDots();

                // Ajouter une classe pour indiquer un carousel actif
                document
                  .getElementById("reviews-carousel")
                  .classList.add("carousel-active");
              },
              updated(s) {
                s.moveToIdx(s.track.details.abs + 5, true, animation);
              },
              animationEnded(s) {
                s.moveToIdx(s.track.details.abs + 5, true, animation);
              },
              slideChanged: (s) => {
                updateDots(s.track.details.rel);
              },
              // Arrêter l'animation quand l'utilisatrice commence à glisser
              dragStart: () => {
                stopAutoplay();
              },
              // Reprendre l'animation quelques secondes après la fin du glissement
              dragEnd: () => {
                setTimeout(resumeAutoplay, 5000); // 5 secondes avant de reprendre
              },
            });

            // Nombre de slides en fonction de la taille d'écran
            function getResponsiveSlideCount() {
              if (window.innerWidth < 640) return 1;
              if (window.innerWidth < 1024) return 2;
              if (window.innerWidth < 1280) return 3;
              return 3; // Maximum 3 avis visibles même sur grands écrans
            }

            // Variable pour suivre l'état de l'animation
            let isAutoPlaying = true;

            // Fonctions pour contrôler l'autoplay
            function stopAutoplay() {
              if (carousel && carousel.animator) {
                carousel.animator.stop();
                isAutoPlaying = false;
              }
            }

            function resumeAutoplay() {
              if (carousel && !isAutoPlaying) {
                isAutoPlaying = true;
                carousel.moveToIdx(
                  carousel.track.details.abs + 5,
                  true,
                  animation
                );
              }
            }

            // Points de navigation améliorés
            function createDots() {
              const dotsContainer = document.getElementById("carousel-dots");
              const slidesCount = carousel.track.details.slides.length;

              // Limiter le nombre de points pour éviter l'encombrement
              const maxDots = window.innerWidth < 640 ? 5 : slidesCount;
              const visibleDots = Math.min(slidesCount, maxDots);

              for (let i = 0; i < visibleDots; i++) {
                const dot = document.createElement("button");
                dot.classList.add("dot");
                dot.setAttribute("aria-label", `Aller à l'avis ${i + 1}`);

                if (i === 0) dot.classList.add("active");

                dot.addEventListener("click", () => {
                  carousel.moveToIdx(i);
                  stopAutoplay();

                  // Animation de feedback au clic
                  dot.classList.add("scale-125");
                  setTimeout(() => dot.classList.remove("scale-125"), 200);
                });

                dotsContainer.appendChild(dot);
              }
            }

            function updateDots(currentIndex) {
              const dots = document.querySelectorAll(".dot");
              dots.forEach((dot, i) => {
                dot.classList.toggle("active", i === currentIndex);
              });
            }

            // Gestion des interactions
            const carouselElement = document.getElementById("reviews-carousel");
            carouselElement.addEventListener("mouseenter", stopAutoplay);
            carouselElement.addEventListener("mouseleave", resumeAutoplay);
            carouselElement.addEventListener("touchstart", stopAutoplay, {
              passive: true,
            });
            carouselElement.addEventListener(
              "touchend",
              () => {
                setTimeout(resumeAutoplay, 3000); // Reprendre après 3 secondes d'inactivité
              },
              { passive: true }
            );

            // Adaptations de fenêtre et visibilité
            window.addEventListener("resize", () => {
              carousel.refresh();
              // Recréer les points si nécessaire lors du redimensionnement
              const dotsContainer = document.getElementById("carousel-dots");
              if (dotsContainer) {
                dotsContainer.innerHTML = "";
                createDots();
              }
            });

            document.addEventListener("visibilitychange", () => {
              document.hidden ? stopAutoplay() : resumeAutoplay();
            });
          }
        });
      </script>
    </div>
  </div>
</section>
