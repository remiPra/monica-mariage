---
// FavoriDrawerDesktop.astro
---

<div class="favoris-components-desktop">
    <!-- Bouton pour ouvrir le tiroir des favoris desktop -->
    <div id="desktopDrawer" class="flex cursor-pointer">
      <button
        id="show-favoris-desktop-btn"
        class="text-[#7A5C4B] font-semibold flex items-center hover:text-[#A37B63] transition-colors"
        aria-label="Afficher mes favoris"
      >
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" class="w-5 h-5 mr-1 favori-desktop-icon">
          <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
        </svg>
        <span id="favoris-desktop-count" class="text-sm font-medium">0</span>
      </button>
    </div>

    <!-- Tiroir latéral des favoris (caché par défaut) -->
    <div
      id="favoris-desktop-drawer"
      class="fixed inset-y-0 right-0 w-full sm:w-96 bg-white shadow-xl transform translate-x-full transition-transform duration-300 ease-in-out z-50 flex flex-col"
    >
      <div class="p-6 border-b border-pink-100 flex justify-between items-center bg-gradient-to-r from-white to-pink-50">
        <h2 class="text-2xl font-vibes text-[#AC8A75]">Mes robes favorites</h2>
        <button
          id="close-favoris-desktop-btn"
          class="text-gray-600 hover:text-gray-900"
          aria-label="Fermer"
        >
          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <line x1="18" y1="6" x2="6" y2="18"></line>
            <line x1="6" y1="6" x2="18" y2="18"></line>
          </svg>
        </button>
      </div>
      
      <div class="flex-grow overflow-auto p-4">
        <div id="favoris-desktop-container" class="space-y-4">
          <!-- Les favoris seront chargés ici -->
        </div>
        
        <p id="no-favoris-desktop-message" class="text-gray-500 text-center py-8 hidden">
          Vous n'avez pas encore de robes favorites.
        </p>
      </div>
      
      <div class="p-4 border-t border-pink-100 flex flex-col gap-3">
        <button 
          id="share-whatsapp-desktop-btn" 
          class="w-full bg-[#25D366] text-white font-semibold py-3 rounded-full text-center shadow-md hover:bg-[#1EA952] transition-all flex items-center justify-center"
        >
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="currentColor" class="mr-2">
            <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893a11.821 11.821 0 00-3.48-8.413z"/>
          </svg>
          Partager ma sélection
        </button>
      </div>
    </div>
  
    <!-- Overlay pour fermer le tiroir en cliquant à l'extérieur -->
    <div id="favoris-desktop-overlay" class="fixed inset-0 bg-black/50 z-40 hidden"></div>
</div>
  
<script defer>
  document.addEventListener("DOMContentLoaded", () => {
    setupFavorisDesktopDrawer();
    updateFavorisDesktopCount();
    
    // Écouter les mises à jour des favoris
    window.addEventListener('favorisUpdated', (event) => {
      updateFavorisDesktopCount();
      if (!document.getElementById('favoris-desktop-drawer').classList.contains('translate-x-full')) {
        loadFavorisDesktop();
      }
    });

    // Pour compatibilité avec l'ancien événement
    window.addEventListener('favoritesUpdated', (event) => {
      updateFavorisDesktopCount();
      if (!document.getElementById('favoris-desktop-drawer').classList.contains('translate-x-full')) {
        loadFavorisDesktop();
      }
    });
  });
  
  function setupFavorisDesktopDrawer() {
    const favorisDrawer = document.getElementById('favoris-desktop-drawer');
    const favorisOverlay = document.getElementById('favoris-desktop-overlay');
    const showFavorisBtn = document.getElementById('show-favoris-desktop-btn');
    const desktopDrawer = document.getElementById('desktopDrawer');
    const closeFavorisBtn = document.getElementById('close-favoris-desktop-btn');
    const shareWhatsAppBtn = document.getElementById('share-whatsapp-desktop-btn');
    
    // Fonction pour ouvrir le tiroir
    function openDrawer() {
      favorisDrawer.classList.remove('translate-x-full');
      favorisOverlay.classList.remove('hidden');
      document.body.style.overflow = 'hidden'; // Empêcher le défilement
      loadFavorisDesktop();
    }
    
    // Fonction pour fermer le tiroir
    function closeDrawer() {
      favorisDrawer.classList.add('translate-x-full');
      favorisOverlay.classList.add('hidden');
      document.body.style.overflow = '';
    }
    
    // Gestionnaires d'événements
    if (showFavorisBtn) showFavorisBtn.addEventListener('click', openDrawer);
    if (desktopDrawer) desktopDrawer.addEventListener('click', openDrawer);
    if (closeFavorisBtn) closeFavorisBtn.addEventListener('click', closeDrawer);
    if (favorisOverlay) favorisOverlay.addEventListener('click', closeDrawer);
    
    // Partage WhatsApp
    if (shareWhatsAppBtn) {
      shareWhatsAppBtn.addEventListener('click', shareViaWhatsAppDesktop);
    }
    
    // Fermer avec la touche Echap
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && favorisDrawer && !favorisDrawer.classList.contains('translate-x-full')) {
        closeDrawer();
      }
    });
  }
  
  function updateFavorisDesktopCount() {
    const countElement = document.getElementById('favoris-desktop-count');
    if (!countElement) return;
    
    const favoris = getFavorisFromStorage();
    countElement.textContent = favoris.length;
    
    // Mettre à jour l'icône en fonction du nombre de favoris
    const icon = document.querySelector('.favori-desktop-icon');
    if (icon) {
      if (favoris.length > 0) {
        icon.setAttribute('fill', 'currentColor');
        icon.classList.add('text-pink-500');
      } else {
        icon.setAttribute('fill', 'none');
        icon.classList.remove('text-pink-500');
      }
    }
  }
  
  function loadFavorisDesktop() {
    const favorisContainer = document.getElementById('favoris-desktop-container');
    const noFavorisMessage = document.getElementById('no-favoris-desktop-message');
    
    if (!favorisContainer || !noFavorisMessage) return;
    
    // Récupérer les favoris du localStorage
    const favoris = getFavorisFromStorage();
    
    // Vider le conteneur
    favorisContainer.innerHTML = '';
    
    // Afficher un message si aucun favori
    if (favoris.length === 0) {
      noFavorisMessage.classList.remove('hidden');
    } else {
      noFavorisMessage.classList.add('hidden');
      
      // Créer une carte pour chaque favori
      favoris.forEach(fav => {
        const card = document.createElement('div');
        card.className = 'flex items-center border border-pink-200 rounded-xl overflow-hidden shadow-sm mb-3 hover:shadow-md transition-shadow';
        card.innerHTML = `
          <div class="w-24 h-24 flex-shrink-0">
            <img 
              src="${fav.imageUrl}" 
              alt="${fav.imageAlt}"
              class="w-full h-full object-cover"
            />
          </div>
          <div class="flex-grow p-3">
            <p class="font-vibes text-xl text-[#AC8A75]">${fav.name}</p>
            <div class="flex justify-between items-center mt-2">
              <a href="/robes-de-mariee/${fav.sousCategorie}/${fav.slug}" class="text-sm text-[#AC8A75] hover:underline">
                Voir la robe
              </a>
              <button 
                class="favori-desktop-remove-btn text-pink-500 hover:text-pink-700"
                data-image-id="${fav.id}"
                aria-label="Retirer des favoris"
              >
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                  <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
                </svg>
              </button>
            </div>
          </div>
        `;
        
        // Ajouter le gestionnaire d'événement pour supprimer des favoris
        const removeBtn = card.querySelector('.favori-desktop-remove-btn');
        removeBtn.addEventListener('click', (e) => {
          e.preventDefault();
          e.stopPropagation();
          
          const imageId = removeBtn.dataset.imageId;
          
          // Mettre à jour tous les boutons avec le même imageId
          document.querySelectorAll(`.favori-button[data-image-id="${imageId}"]`).forEach(btn => {
            btn.dataset.favori = 'false';
            updateFavoriDesktopStyle(btn, false);
          });
          
          // Mettre à jour le localStorage
          removeFavoriDesktop(imageId);
          
          // Recharger la liste des favoris
          loadFavorisDesktop();
        });
        
        favorisContainer.appendChild(card);
      });
    }
  }
  
  function updateFavoriDesktopStyle(button, isFavori) {
    const icon = button.querySelector('.favori-icon');
    if (!icon) return;
    
    if (isFavori) {
      icon.classList.add('text-pink-500');
      icon.setAttribute('fill', 'currentColor');
    } else {
      icon.classList.remove('text-pink-500');
      icon.setAttribute('fill', 'none');
    }
  }
  
  function removeFavoriDesktop(imageId) {
    const favoris = getFavorisFromStorage();
    const index = favoris.findIndex(fav => fav.id === imageId);
    
    if (index !== -1) {
      favoris.splice(index, 1);
      localStorage.setItem('favoriteRobes', JSON.stringify(favoris));
      
      // Déclencher l'événement personnalisé
      window.dispatchEvent(new CustomEvent('favorisUpdated', { detail: { count: favoris.length } }));
    }
  }
  
  function getFavorisFromStorage() {
    const storedFavoris = localStorage.getItem('favoriteRobes');
    return storedFavoris ? JSON.parse(storedFavoris) : [];
  }
  
  function shareViaWhatsAppDesktop() {
    const favoris = getFavorisFromStorage();
    
    if (favoris.length === 0) {
      alert("Vous n'avez pas encore de robes favorites à partager.");
      return;
    }
    
    // Construire le message
    let message = "Voici ma sélection de robes favorites de Monica Mariage:\n\n";
    
    // Ajouter chaque robe avec son lien
    favoris.forEach((fav, index) => {
      message += `${index + 1}. ${fav.name}: ${window.location.origin}/robes-de-mariee/${fav.sousCategorie}/${fav.slug}\n`;
    });
    
    // Ajouter un message de conclusion
    message += "\nJ'aimerais avoir votre avis sur cette sélection !";
    
    // Encoder le message pour l'URL
    const encodedMessage = encodeURIComponent(message);
    
    // Créer l'URL WhatsApp et l'ouvrir
    const whatsappUrl = `https://wa.me/?text=${encodedMessage}`;
    window.open(whatsappUrl, '_blank');
  }
</script>
  
<style>
  /* Animation pour le tiroir */
  @keyframes slide-in {
    from { transform: translateX(100%); }
    to { transform: translateX(0); }
  }
  
  @keyframes slide-out {
    from { transform: translateX(0); }
    to { transform: translateX(100%); }
  }
</style>