---
import { Icon } from "astro-icon/components";
const { isVisible } = Astro.props;
---

<!-- Overlay avec effet de flou -->
<div
  id="contact-overlay"
  class={`fixed inset-0 bg-black/30 backdrop-blur-sm flex items-center justify-center z-50 transition-all duration-500 ease-in-out
    ${isVisible ? "opacity-100 pointer-events-auto" : "opacity-0 pointer-events-none"}`}
>
  <!-- Contenu du Modal -->
  <div
    id="modal-content"
    class="relative bg-white p-8 rounded-2xl w-full max-w-lg shadow-xl transform transition-all duration-500 ease-in-out
      ${isVisible ? 'scale-100 translate-y-0' : 'scale-95 translate-y-4'}"
  >
    <!-- Bouton de fermeture élégant -->
    <button
      id="close-overlay"
      type="button"
      class="absolute top-4 right-4 w-8 h-8 flex items-center justify-center rounded-full text-[#8B7569] hover:bg-[#FDF8F7] transition-colors"
      aria-label="Fermer"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="20"
        height="20"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <line x1="18" y1="6" x2="6" y2="18"></line>
        <line x1="6" y1="6" x2="18" y2="18"></line>
      </svg>
    </button>

    <!-- En-tête avec style cohérent -->
    <div class="text-center mb-6">
      <h2 class="font-vibes text-3xl text-[#af7749] mb-2">
        Vous rêvez de la robe parfaite ?
      </h2>

      <!-- Séparateur décoratif -->
      <div class="flex items-center justify-center gap-4 mb-4">
        <span class="h-px w-12 bg-[#C5A880]"></span>
        <p class="text-[#8B7569] text-xs font-medium">PRENONS CONTACT</p>
        <span class="h-px w-12 bg-[#C5A880]"></span>
      </div>

      <p class="text-[#5F4B3F] text-center max-w-md mx-auto">
        Laissez-nous vos coordonnées pour vous aider à trouver la robe de vos
        rêves.
      </p>
    </div>

    <!-- Boutons de contact rapide -->
    <div class="flex justify-center gap-4 mb-6">
      <a
        id="call-button"
        href="tel:+33668300960"
        class="flex items-center gap-2
      px-5 py-3 bg-[#af7749] text-white rounded-full shadow-md
      hover:bg-[#925c36] hover:scale-105 transition-all duration-300"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="18"
          height="18"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
        >
          <path
            d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"
          ></path>
        </svg>
        Appeler
      </a>
      <a
        id="chat-button"
        href="https://wa.me/33668300960?text=Bonjour%20Monica%20Mariage%20!"
        class="flex items-center gap-2 px-5 py-3 bg-[#25D366] text-white
    rounded-full shadow-md hover:bg-[#1faa54] hover:scale-105 transition-all
    duration-300"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="18"
          height="18"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
        >
          <path
            d="M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z"
          ></path>
        </svg>
        WhatsApp
      </a>
    </div>

    <!-- Formulaire de contact élégant -->
    <form id="contact-form" class="space-y-4">
      <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div>
          <label class="block text-[#5F4B3F] font-medium text-sm mb-1"
            >Prénom *</label
          >
          <input
            id="prenom"
            name="prenom"
            type="text"
            placeholder="Votre prénom"
            required
            class="w-full p-3 border border-[#F0E6E2] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#af7749]/30 focus:border-[#af7749] transition"
          />
        </div>
        <div>
          <label class="block text-[#5F4B3F] font-medium text-sm mb-1"
            >Nom *</label
          >
          <input
            id="nom"
            name="nom"
            type="text"
            placeholder="Votre nom"
            required
            class="w-full p-3 border border-[#F0E6E2] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#af7749]/30 focus:border-[#af7749] transition"
          />
        </div>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div>
          <label class="block text-[#5F4B3F] font-medium text-sm mb-1"
            >Email *</label
          >
          <input
            id="email"
            name="email"
            type="email"
            placeholder="Votre email"
            required
            class="w-full p-3 border border-[#F0E6E2] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#af7749]/30 focus:border-[#af7749] transition"
          />
        </div>
        <div>
          <label class="block text-[#5F4B3F] font-medium text-sm mb-1"
            >Téléphone *</label
          >
          <input
            id="telephone"
            name="telephone"
            type="tel"
            placeholder="06 12 34 56 78"
            required
            class="w-full p-3 border border-[#F0E6E2] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#af7749]/30 focus:border-[#af7749] transition"
          />
        </div>
      </div>

      <div>
        <label class="block text-[#5F4B3F] font-medium text-sm mb-1"
          >Message (optionnel)</label
        >
        <textarea
          id="message"
          name="message"
          rows="3"
          placeholder="Parlez-nous de votre projet, vos inspirations, ou posez-nous vos questions..."
          class="w-full p-3 border border-[#F0E6E2] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#af7749]/30 focus:border-[#af7749] transition"
        ></textarea>
      </div>

      <!-- Boutons d'action -->
      <div class="flex flex-col sm:flex-row justify-between gap-3 mt-6">
        <button
          type="submit"
          class="px-6 py-3 bg-[#af7749] text-white rounded-full shadow-md hover:bg-[#925c36] hover:scale-105 transition-all duration-300 font-medium"
        >
          Envoyer ma demande
        </button>
        <button
          type="button"
          id="no-thanks-btn"
          class="px-6 py-3 bg-[#F8F2F0] text-[#8B7569] rounded-full shadow-sm hover:bg-[#F0E6E2] transition-all duration-300"
        >
          Pas maintenant
        </button>
      </div>

      <!-- Message de confirmation avec animation -->
      <div
        id="submission-message"
        class="hidden mt-4 p-4 bg-[#F3FAF3] border border-[#D1EAD1] rounded-lg text-center text-[#4B8B55]"
      >
        <svg
          class="w-6 h-6 mx-auto mb-2"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M5 13l4 4L19 7"></path>
        </svg>
        <p class="font-medium">Merci ! Votre message a bien été envoyé.</p>
        <p class="text-sm mt-1">
          Nous vous répondrons dans les plus brefs délais.
        </p>
      </div>
    </form>
    <div class="text-center mt-4">
      <button
        id="close-later-btn"
        type="button"
        class="px-6 py-3 bg-transparent text-[#8B7569] hover:text-[#5F4B3F] transition-colors underline font-medium"
      >
        Pas maintenant, je reviendrai plus tard
      </button>
    </div>
    <!-- Note de confidentialité -->
    <p class="text-[#8B7569] text-xs text-center mt-6">
      En soumettant ce formulaire, vous acceptez que vos données soient
      utilisées exclusivement pour répondre à votre demande.
    </p>

    <script defer>
      document.addEventListener("DOMContentLoaded", function () {
        const overlay = document.getElementById("contact-overlay");
        const modalContent = document.getElementById("modal-content");
        const closeButton = document.getElementById("close-overlay");
        const noThanksButton = document.getElementById("no-thanks-btn");
        const callButton = document.getElementById("call-button");
        const chatButton = document.getElementById("chat-button");
        const contactForm = document.getElementById("contact-form");
        const submissionMessage = document.getElementById("submission-message");
        // Ajouter avec les autres gestionnaires d'événements
        const closeLaterBtn = document.getElementById("close-later-btn");

        // Fonction pour afficher la modale avec animation
        const showOverlay = () => {
          overlay.classList.remove("opacity-0", "pointer-events-none");
          overlay.classList.add("opacity-100", "pointer-events-auto");

          // Animation d'entrée plus élégante
          modalContent.classList.remove("scale-95", "translate-y-4");
          modalContent.classList.add("scale-100", "translate-y-0");

          // Accessibilité - piéger le focus
          document.body.style.overflow = "hidden";
        };

        // Fonction pour masquer la modale avec animation
        const hideOverlay = (permanent = false) => {
          overlay.classList.add("opacity-0", "pointer-events-none");
          overlay.classList.remove("opacity-100", "pointer-events-auto");

          // Animation de sortie
          modalContent.classList.add("scale-95", "translate-y-4");
          modalContent.classList.remove("scale-100", "translate-y-0");

          // Restaurer le scroll
          document.body.style.overflow = "";

          if (permanent) {
            sessionStorage.setItem("modalClosed", "true"); // Empêche le retour pendant la session
          }
        };

        // Gestionnaires d'événements pour fermeture
        closeButton.addEventListener("click", () => hideOverlay(true));
        noThanksButton.addEventListener("click", () => hideOverlay(true));
        closeLaterBtn.addEventListener("click", () => hideOverlay(true));

        // Permettre de fermer en cliquant à l'extérieur
        overlay.addEventListener("click", (e) => {
          if (e.target === overlay) {
            hideOverlay(true);
          }
        });

        // Fermer avec la touche Échap
        document.addEventListener("keydown", (e) => {
          if (e.key === "Escape" && overlay.classList.contains("opacity-100")) {
            hideOverlay(true);
          }
        });

        // Soumission du formulaire avec animation
        // Soumission du formulaire avec animation
        contactForm.addEventListener("submit", async (e) => {
          e.preventDefault();

          // Collecter les données du formulaire - seuls nom et téléphone sont essentiels
          const formData = {
            prenom: document.getElementById("prenom").value || "",
            nom: document.getElementById("nom").value,
            email: document.getElementById("email").value || "",
            telephone: document.getElementById("telephone").value,
            message: document.getElementById("message").value || "",
          };

          // Vérifier si les champs obligatoires sont remplis
          if (!formData.nom || !formData.telephone) {
            // Afficher un message d'erreur si des champs obligatoires manquent
            submissionMessage.innerHTML = `
      <svg class="w-6 h-6 mx-auto mb-2 text-red-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
      </svg>
      <p class="font-medium">Veuillez remplir les champs obligatoires</p>
      <p class="text-sm mt-1">Le nom et le téléphone sont requis.</p>
    `;
            submissionMessage.classList.remove("hidden");
            submissionMessage.classList.add("animate-fade-in");
            submissionMessage.style.backgroundColor = "#FADEDE";
            submissionMessage.style.borderColor = "#EABCBC";
            submissionMessage.style.color = "#AF3B3B";
            return;
          }

          try {
            // Désactiver les champs pendant l'envoi
            contactForm
              .querySelectorAll("input, textarea, button")
              .forEach((el) => {
                el.disabled = true;
              });

            // Envoi des données à l'API
            const response = await fetch(
              "https://monica-mariage-next.vercel.app/api/send-email",
              {
                method: "POST",
                headers: {
                  "Content-Type": "application/json",
                },
                body: JSON.stringify(formData),
              }
            );

            if (!response.ok) {
              throw new Error("Erreur lors de l'envoi du formulaire");
            }

            // Afficher le message de confirmation si l'envoi est réussi
            submissionMessage.innerHTML = `
      <svg class="w-6 h-6 mx-auto mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
      </svg>
      <p class="font-medium">Merci ! Votre message a bien été envoyé.</p>
      <p class="text-sm mt-1">Nous vous répondrons dans les plus brefs délais.</p>
    `;
            submissionMessage.classList.remove("hidden");
            submissionMessage.classList.add("animate-fade-in");
            submissionMessage.style.backgroundColor = "#F3FAF3";
            submissionMessage.style.borderColor = "#D1EAD1";
            submissionMessage.style.color = "#4B8B55";

            // Fermer après un délai
            setTimeout(() => {
              hideOverlay(true);

              // Réinitialiser le formulaire après fermeture
              setTimeout(() => {
                contactForm.reset();
                contactForm
                  .querySelectorAll("input, textarea, button")
                  .forEach((el) => {
                    el.disabled = false;
                  });
                submissionMessage.classList.add("hidden");
              }, 500);
            }, 2500);
          } catch (error) {
            console.error("Erreur:", error);
            // Gérer l'erreur - par exemple, afficher un message d'erreur
            submissionMessage.innerHTML = `
      <svg class="w-6 h-6 mx-auto mb-2 text-red-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
      </svg>
      <p class="font-medium">Une erreur est survenue</p>
      <p class="text-sm mt-1">Veuillez réessayer ou nous contacter directement.</p>
    `;
            submissionMessage.classList.remove("hidden");
            submissionMessage.classList.add("animate-fade-in");
            submissionMessage.style.backgroundColor = "#FADEDE";
            submissionMessage.style.borderColor = "#EABCBC";
            submissionMessage.style.color = "#AF3B3B";

            // Réactiver les champs pour permettre une nouvelle tentative
            contactForm
              .querySelectorAll("input, textarea, button")
              .forEach((el) => {
                el.disabled = false;
              });
          }
        });

        // Vérification pour afficher la modale
        // Vérification pour afficher la modale
        const checkOverlayVisibility = () => {
          // Vérifier si l'utilisateur a déjà fermé la modale dans cette session
          if (sessionStorage.getItem("modalClosed") === "true") return;

          // Vérifier si nous avons déjà défini un temps pour la modale
          const modalTimerSet = sessionStorage.getItem("modalTimerSet");

          if (!modalTimerSet) {
            // Première visite sur le site, définir le temps actuel
            sessionStorage.setItem("modalTimerSet", Date.now().toString());
            // Ne pas afficher immédiatement
            return;
          }

          // Calculer si 30 secondes se sont écoulées depuis la première visite
          const timeSinceFirstVisit = Date.now() - parseInt(modalTimerSet);
          const thirtySecondsInMs = 30000;

          if (timeSinceFirstVisit >= thirtySecondsInMs) {
            // 30 secondes ou plus se sont écoulées depuis la première visite
            showOverlay();
          } else {
            // Moins de 30 secondes se sont écoulées, définir un minuteur pour le temps restant
            const remainingTime = thirtySecondsInMs - timeSinceFirstVisit;
            setTimeout(showOverlay, remainingTime);
          }
        };

        checkOverlayVisibility();
      });
    </script>

    <style>
      @keyframes fade-in {
        from {
          opacity: 0;
          transform: translateY(10px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      .animate-fade-in {
        animation: fade-in 0.5s ease forwards;
      }

      /* Style des placeholders */
      ::placeholder {
        color: #c5a88080;
        opacity: 0.6;
      }

      /* Améliorer l'apparence des champs focus */
      input:focus,
      textarea:focus {
        box-shadow: 0 0 0 3px rgba(175, 123, 73, 0.1);
      }
    </style>
  </div>
</div>
