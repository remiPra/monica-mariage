---
import {
  getAllRobes,
  getRobeData,
  getRandomDresses,
  prepareRobeImages,
} from "../../../lib/robeUtils";
import RobeDetail from "../../../components/RobeDetails.astro";
import ProductLayout from "../../../layouts/ProductLayout.astro";
import { sanityClient } from "../../../sanityClient";

// 1) Génération des chemins dynamiques pour chaque slug de robe
export async function getStaticPaths() {
  // Définir la sous-catégorie DANS la fonction getStaticPaths
  const sousCategorie = "forme-princesse";
  
  const slugs = await sanityClient.fetch(`
    *[_type == "robe" && category == "robes-de-mariee" && sousCategorie == "${sousCategorie}"].slug.current
  `);
  
  return slugs.map((s) => ({
    params: { slug: s },
    // Passer la sous-catégorie comme prop pour qu'elle soit accessible plus tard
    props: { sousCategorie },
  }));
}

// 2) Lecture du paramètre de route et des props
const { slug } = Astro.params;
const { sousCategorie } = Astro.props as { sousCategorie: string }; // Récupérer la sous-catégorie depuis les props

// 3) Fetch de toutes les robes pour navigation
const allRobes = await getAllRobes(sousCategorie);

// 4) Récupération de la robe courante
const robeData = await getRobeData(slug, sousCategorie);

if (!robeData) {
  throw new Error(`Robe introuvable pour le slug : ${slug}`);
}

// 5) Préparation des images pour le slider
const robe = prepareRobeImages(robeData);

// 6) Calcul des précédents/suivants
const currentIndex = allRobes.findIndex((r) => r.slug === slug);
const prevItem =
  allRobes[(currentIndex - 1 + allRobes.length) % allRobes.length];
const nextItem = allRobes[(currentIndex + 1) % allRobes.length];

// 7) Suggestions aléatoires
const randomDresses = await getRandomDresses(slug, sousCategorie);

// Récupération de la première image pour préchargement
const firstImage = robe.images.length > 0 ? robe.images[0] : null;

// Configuration des images pour le préchargement
const productImages = firstImage
  ? {
      mobile: firstImage.optimized.mobile,
      tablet: firstImage.optimized.tablet,
      desktop: firstImage.optimized.tablet,
    }
  : {};

// Préparer les données produit pour le JSON-LD
const productData = {
  dressName: robe.dressName,
  descriptionCourte: robe.descriptionCourte,
  metaDescription: robe.metaDescription,
  imagesCloudinary: robe.imagesCloudinary,
  price: robe.price,
  sousCategorie: sousCategorie,
  url: `https://monicamariage.com/robes-de-mariee/${sousCategorie}/${slug}`
};

// Breadcrumbs
const breadcrumbs = [
  { name: "Accueil", url: "https://monicamariage.com" },
  { name: "Robes de mariée", url: "https://monicamariage.com/robes-de-mariee" },
  { 
    name: sousCategorie.replace('-', ' ').replace(/\b\w/g, l => l.toUpperCase()), 
    url: `https://monicamariage.com/robes-de-mariee/${sousCategorie}` 
  },
  { name: robe.dressName, url: productData.url }
];
---

<ProductLayout
  title={`${robe.dressName} - Robe de Mariée Princesse | Monica Mariage Toulouse`}
  description={robe.metaDescription || `Découvrez la robe ${robe.dressName}, une création élégante de notre collection princesse chez Monica Mariage à Toulouse.`}
  product={productData}
  breadcrumbs={breadcrumbs}
  mainImageUrl={firstImage?.optimized?.desktop}
>
  <RobeDetail
    robe={robe}
    slug={slug}
    allRobes={allRobes}
    prevItem={prevItem}
    nextItem={nextItem}
    randomDresses={randomDresses}
    productImages={productImages}
    firstImage={firstImage}
  />
</ProductLayout>