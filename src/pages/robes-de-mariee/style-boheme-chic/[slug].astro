---
import Layout from "../../../layouts/Layout.astro";
import sirene from "../../../data/style-boheme-chic-dynamique.json"; // Assurez-vous que le chemin est correct
import PrendreRendezVousButtonHome from "../../../components/PrendreRendezVousButtonHome.astro";

// Génère tous les chemins statiques à partir du JSON
export async function getStaticPaths() {
  const paths = sirene.map((robe) => ({
    params: { slug: robe.slug }, // Utilisation du slug pour générer l'URL
    props: {
      robe,
      randomDresses: sirene
        .filter((r) => r.slug !== robe.slug) // Exclure la robe courante
        .sort(() => 0.5 - Math.random()) // Mélange
        .slice(0, 4), // Sélection de 4 robes aléatoires
    },
  }));

  console.log(
    "Routes générées :",
    paths.map((p) => p.params.slug)
  ); // Vérification des slugs
  return paths;
}

// Récupération des données depuis les props Astro
const { robe, randomDresses } = Astro.props;

// Formatage de la catégorie pour affichage
const categoryName = robe.category
  .replace(/-/g, " ")
  .replace(/\b\w/g, (l) => l.toUpperCase());
---

<Layout title={robe.title} description={robe.metaDescription}>
  <!-- Préchargement éventuel de la première image du slider -->
  <link
    rel="preload"
    as="image"
    href={robe.images &&
    robe.images[0] &&
    robe.images[0].optimizedImages &&
    robe.images[0].optimizedImages.gallery
      ? robe.images[0].optimizedImages.gallery.desktop
      : ""}
    type="image/webp"
    fetchpriority="high"
  />
  <!-- Swiper CSS + JS (version 10) -->
  <link
    rel="stylesheet"
    href="https://cdn.jsdelivr.net/npm/swiper@10/swiper-bundle.min.css"
  />
  <script
    defer
    src="https://cdn.jsdelivr.net/npm/swiper@10/swiper-bundle.min.js"></script>

  <style>
    /* Personnalisation des flèches du slider Swiper */
    .custom-swiper-button-prev,
    .custom-swiper-button-next {
      color: #c5a880;
    }

    .custom-swiper-button-prev:after,
    .custom-swiper-button-next:after {
      font-size: 24px;
    }

    .custom-swiper-button-prev:hover,
    .custom-swiper-button-next:hover {
      color: #a27e5d;
    }

    .nav-robe-btn {
      display: flex;
      align-items: center;
      color: #af7749;
      padding: 0.5rem 1rem;
      border-radius: 0.5rem;
      transition: all 0.3s ease;
      font-weight: 500;
    }

    .nav-robe-btn:hover {
      background-color: rgba(197, 168, 128, 0.1);
      color: #c5a880;
    }

    .category-header {
      display: flex;
      align-items: center;
      justify-content: space-between;
      margin-bottom: 1.5rem;
      padding: 0 0.5rem;
    }

    .category-pill {
      background-color: #f9f5f0;
      color: #af7749;
      padding: 0.5rem 1.25rem;
      border-radius: 2rem;
      font-size: 0.9rem;
      border: 1px solid #c5a880;
      font-weight: 500;
      letter-spacing: 0.5px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    }
  </style>

  <!-- Contenu principal -->
  <div
    class="mt-20 max-w-7xl mx-auto px-4 lg:px-6 flex flex-col lg:flex-row gap-10"
  >
    <!-- Section gauche: slider -->
    <section class="md:mt-0 mt-[50px] w-full lg:w-[60%]">
      <!-- Navigation entre catégorie et robes -->
      <div class="flex items-center justify-between mb-6 px-2 py-3">
        {
          (() => {
            // Trouver l'index de la robe actuelle
            const currentIndex = sirene.findIndex((r) => r.slug === robe.slug);
            // Robe précédente (si on est à la première, on va à la dernière)
            const prevIndex =
              currentIndex > 0 ? currentIndex - 1 : sirene.length - 1;
            // Robe suivante (si on est à la dernière, on revient à la première)
            const nextIndex =
              currentIndex < sirene.length - 1 ? currentIndex + 1 : 0;

            return (
              <>
                <a
                  href={`/robes-de-mariee/${sirene[prevIndex].category}/${sirene[prevIndex].slug}`}
                  class="flex items-center text-[#af7749] hover:text-[#C5A880] transition-colors"
                  title={`Voir la robe ${sirene[prevIndex].dressName}`}
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    class="h-6 w-6"
                    viewBox="0 0 20 20"
                    fill="currentColor"
                  >
                    <path
                      fill-rule="evenodd"
                      d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z"
                      clip-rule="evenodd"
                    />
                  </svg>
                </a>

                <div class="text-center px-4">
                  <p class="text-[#af7749] font-vibes text-3xl">
                    {robe.dressName.charAt(0).toUpperCase() +
                      robe.dressName.slice(1).toLowerCase()}
                  </p>
                </div>

                <a
                  href={`/robes-de-mariee/${sirene[nextIndex].category}/${sirene[nextIndex].slug}`}
                  class="flex items-center text-[#af7749] hover:text-[#C5A880] transition-colors"
                  title={`Voir la robe ${sirene[nextIndex].dressName}`}
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    class="h-6 w-6"
                    viewBox="0 0 20 20"
                    fill="currentColor"
                  >
                    <path
                      fill-rule="evenodd"
                      d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                      clip-rule="evenodd"
                    />
                  </svg>
                </a>
              </>
            );
          })()
        }
      </div>

      <div
        class="relative w-full max-w-[500px] h-[600px] mx-auto overflow-hidden"
      >
        <div
          class="swiper-container rounded-2xl shadow-lg border border-[#C5A880]"
        >
          <div class="swiper-wrapper">
            {
              robe.images &&
                robe.images.length > 0 &&
                robe.images.map((img) => (
                  <div class="swiper-slide" key={img.id}>
                    <img
                      src={img.optimizedImages?.gallery?.desktop || ""}
                      alt={img.altOptimized || robe.dressName}
                      class="object-cover w-full h-full rounded-2xl"
                      loading="lazy"
                    />
                  </div>
                ))
            }
          </div>

          <!-- Contrôles du slider -->
          <div class="swiper-button-prev custom-swiper-button-prev"></div>
          <div class="swiper-button-next custom-swiper-button-next"></div>
        </div>
      </div>
    </section>

    <!-- Section droite: infos robe -->
    <section class="w-full lg:w-[40%] flex flex-col justify-center">
      <h1 class="text-4xl font-vibes text-[#af7749] mb-4">
        Robe de Mariée {
          robe.dressName.charAt(0).toUpperCase() +
            robe.dressName.slice(1).toLowerCase()
        }
      </h1>
      <p class="text-gray-700 text-lg leading-relaxed whitespace-pre-line">
        {robe.descriptionCourte}
      </p>
      <div class="mt-10 w-full text-center">
        <PrendreRendezVousButtonHome />
      </div>
    </section>
  </div>

  <!-- "Vous pourriez aussi aimer" -->
  <div class="max-w-7xl mb-20 mx-auto px-6 mt-20">
    <h2
      class="text-[50px] font-cursive md:text-3xl font-playfair text-[#af7749] mb-8 text-center"
    >
      Vous pourriez aussi aimer
    </h2>

    <div
      class="grid grid-cols-2 sm:grid-cols-2 md:grid-cols-4 lg:grid-cols-4 gap-4"
    >
      {
        randomDresses &&
          randomDresses.map((dress) => (
            <a
              key={
                dress.images && dress.images[0]
                  ? dress.images[0].id
                  : dress.dressName
              }
              href={`/robes-de-mariee/${dress.category}/${dress.slug}`}
              class="relative text-center overflow-hidden border-[#322d25] cursor-pointer fade-in border rounded-2xl h-[300px] shadow-md"
            >
              <div class="absolute w-full h-full inset-0 bg-[#af7749] opacity-20 z-10" />
              {dress.images &&
              dress.images[0] &&
              dress.images[0].optimizedImages &&
              dress.images[0].optimizedImages.gallery ? (
                <img
                  src={dress.images[0].optimizedImages.gallery.mobile}
                  alt={dress.images[0].altOptimized || dress.dressName}
                  class="absolute top-0 w-full h-full object-cover rounded hover:scale-105 transition-transform duration-300 z-[-1]"
                  loading="lazy"
                />
              ) : (
                <div class="absolute top-0 w-full h-full bg-gray-200 flex items-center justify-center z-[-1]">
                  <p class="text-gray-600">Image non disponible</p>
                </div>
              )}
              <div class="absolute flex flex-col  bottom-0 left-0 w-full text-center bg-gradient-to-t from-[#af7749] to-transparent p-6 rounded-b-2xl z-20">
                <p class="text-white font-vibes text-xl md:text-2xl mb-4 drop-shadow-lg">
                  {dress.dressName.charAt(0).toUpperCase() +
                    dress.dressName.slice(1).toLowerCase()}
                </p>
                <button class="bg-[#C5A880]  hidden md:block text-sm text-white font-semibold px-2 md:px-6 py-3 rounded-full shadow-lg hover:bg-[#A27E5D] transition-all">
                  Découvrir cette robe
                </button>
              </div>
            </a>
          ))
      }
    </div>
  </div>

  <!-- Init du slider Swiper -->
  <script defer>
    document.addEventListener("DOMContentLoaded", function () {
      new Swiper(".swiper-container", {
        loop: true,
        slidesPerView: 1,
        spaceBetween: 10,
        autoplay: { delay: 3000 },
        navigation: {
          nextEl: ".custom-swiper-button-next",
          prevEl: ".custom-swiper-button-prev",
        },
      });
    });
  </script>
</Layout>
