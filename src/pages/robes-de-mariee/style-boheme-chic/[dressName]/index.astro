---
import Layout from "../../../../layouts/Layout.astro";
import BreadCrumbs from "../../../../components/BreadCrumbs.astro";
import sirene from "../../../../data/style-boheme-chic-dynamique.json";

// Génère tous les chemins statiques à partir du JSON
export async function getStaticPaths() {
  // sirene est un tableau d'objets
  return sirene.map((robe) => {
    // Sélectionne 4 robes aléatoires différentes
    const randomDresses = sirene
      .filter((r) => r.dressName !== robe.dressName) // exclut la robe courante
      .sort(() => 0.5 - Math.random()) // mélange
      .slice(0, 4); // en prend 4

    // Retourne un objet path + props
    return {
      params: {
        // On met dressName en minuscule (ou slug) pour l'URL
        dressName: robe.dressName.toLowerCase(),
      },
      props: {
        robe,
        randomDresses,
      },
    };
  });
}

// On récupère la robe et la liste random
const { robe, randomDresses } = Astro.props;
console.log(robe.optimizedImages);
---

<Layout title={robe.title} description={robe.metaDescription}>
  <!-- Préchargement éventuel de la première image du slider -->
  <link
    rel="preload"
    as="image"
    href={robe.images && robe.images[0]
      ? robe.images[0].optimizedImages.gallery.desktop
      : ""}
    type="image/webp"
    fetchpriority="high"
  />

  <!-- Swiper CSS + JS (version 10) -->
  <link
    rel="stylesheet"
    href="https://cdn.jsdelivr.net/npm/swiper@10/swiper-bundle.min.css"
  />
  <script
    defer
    src="https://cdn.jsdelivr.net/npm/swiper@10/swiper-bundle.min.js"></script>

  <!-- Contenu principal -->
  <div
    class="mt-20 max-w-7xl mx-auto px-4 lg:px-6 flex flex-col lg:flex-row gap-10"
  >
    <!-- Section gauche: slider -->
    <section class="w-full lg:w-[60%]">
      <BreadCrumbs />

      <div
        class="relative w-full max-w-[500px] h-[600px] mx-auto overflow-hidden"
      >
        <div
          class="swiper-container rounded-2xl shadow-lg border border-[#C5A880]"
        >
          <div class="swiper-wrapper">
            {
              robe.images &&
                robe.images.length > 0 &&
                robe.images.map((img) => (
                  <div class="swiper-slide" key={img.id}>
                    <img
                      src={img.optimizedImages?.gallery?.desktop || ""}
                      alt={img.altOptimized || robe.dressName}
                      class="object-cover w-full h-full rounded-2xl"
                      loading="lazy"
                    />
                  </div>
                ))
            }
          </div>
        </div>
      </div>
    </section>

    <!-- Section droite: infos robe -->
    <section class="w-full lg:w-[40%] flex flex-col justify-center">
      <h1 class="text-4xl font-vibes text-[#af7749] mb-4">
        Robe de Mariée {robe.dressName}
      </h1>
      <p class="text-gray-700 text-lg leading-relaxed">
        {robe.descriptionCourte}
      </p>
      <a
        href="#"
        class="mt-6 block w-full text-center bg-[#af7749] text-white py-4
      px-6 rounded-lg font-medium hover:bg-[#925c36] transition-all duration-300
      text-lg"
      >
        PRENDRE RENDEZ-VOUS
      </a>
    </section>
  </div>

  <!-- "Vous pourriez aussi aimer" -->
  <div class="max-w-7xl mb-20 mx-auto px-6 mt-20">
    <h2
      class="text-[50px] font-cursive md:text-3xl font-playfair text-[#af7749] mb-8 text-center"
    >
      Vous pourriez aussi aimer
    </h2>

    <div
      class="grid grid-cols-2 sm:grid-cols-2 md:grid-cols-4 lg:grid-cols-4 gap-4"
    >
      {
        randomDresses &&
          randomDresses.map((dress) => (
            <a
              key={
                dress.images && dress.images[0]
                  ? dress.images[0].id
                  : dress.dressName
              }
              href={`/robes-de-mariee/style-boheme-chic/${dress.dressName.toLowerCase()}`}
              class="relative text-center overflow-hidden border-[#322d25] cursor-pointer fade-in border rounded-2xl h-[300px] shadow-md"
            >
              <div class="absolute w-full h-full inset-0 bg-[#af7749] opacity-20 z-10" />
              {dress.images && dress.images[0] && (
                <img
                  src={dress.images[0].optimizedImages.gallery.mobile || ""}
                  alt={dress.images[0].altOptimized || dress.dressName}
                  class="absolute top-0 w-full h-full object-cover rounded hover:scale-105 transition-transform duration-300 z-[-1]"
                  loading="lazy"
                />
              )}
          <div class="absolute bottom-0 left-0 w-full text-center bg-gradient-to-t from-[#af7749] to-transparent p-6 rounded-b-2xl z-20">
  <p class="text-white font-vibes text-xl md:text-2xl mb-4 drop-shadow-lg">
    {dress.dressName}
  </p>
  <!-- Bouton mobile (visible uniquement sur mobile) -->
  <button class="bg-[#C5A880] hidden text-sm text-white font-semibold px-5 py-3 rounded-full shadow-lg hover:bg-[#A27E5D] active:scale-95 transition-all duration-300 btn-shine">
    Découvrir cette robe
  </button>
  
  <!-- Bouton desktop (visible uniquement sur desktop) -->
  <button class="bg-[#C5A880] mx-auto hidden md:block text-sm text-white font-semibold px-2 md:px-6 py-3 rounded-full shadow-lg hover:bg-[#A27E5D] hover:scale-105 transition-all duration-300 ">
    Découvrir cette robe
  </button>
</div>
            </a>
          ))
      }
    </div>
  </div>
  <style>
    /* Effet de brillance pour les boutons */
    .btn-shine {
      position: relative;
      overflow: hidden;
    }
    
    .btn-shine::after {
      content: '';
      position: absolute;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;
      background: linear-gradient(
        to bottom right, 
        rgba(255,255,255,0) 0%, 
        rgba(255,255,255,0.3) 50%, 
        rgba(255,255,255,0) 100%
      );
      transform: rotate(30deg);
      transition: transform 0.5s;
    }
    
    .btn-shine:hover::after {
      transform: translateX(100%) rotate(30deg);
      transition: transform 0.7s;
    }
    
    /* Animation tactile spécifique pour mobile */
    @media (max-width: 768px) {
      .btn-shine::after {
        animation: shine-mobile 3s infinite ease-in-out;
        animation-delay: 1s;
      }
    }
    
    @keyframes shine-mobile {
      0% { transform: translateX(-100%) rotate(30deg); }
      20%, 100% { transform: translateX(100%) rotate(30deg); }
    }
  </style>
  <!-- Init du slider Swiper -->
  <script is:inline>
document.addEventListener("DOMContentLoaded", function () {
  // Initialiser Swiper
  const swiper = new Swiper(".swiper-container", {
    loop: true,
    slidesPerView: 1,
    spaceBetween: 10,
    autoplay: { delay: 3000 },
  });
  
  // Attendre que Swiper soit initialisé et que les images soient chargées
  window.addEventListener('load', function() {
    // Sélectionner toutes les images de slides
    const sliderImages = document.querySelectorAll('.swiper-slide img');
    
    // Pour chaque image
    sliderImages.forEach(img => {
      // Rendre l'image cliquable
      img.style.cursor = 'zoom-in';
      
      // Ajouter l'événement de clic
      img.addEventListener('click', function() {
        // Arrêter l'autoplay
        if (swiper.autoplay && swiper.autoplay.running) {
          swiper.autoplay.stop();
        }
        
        // Créer l'overlay
        const overlay = document.createElement('div');
        overlay.style.position = 'fixed';
        overlay.style.top = '0';
        overlay.style.left = '0';
        overlay.style.width = '100%';
        overlay.style.height = '100%';
        overlay.style.backgroundColor = 'rgba(0, 0, 0, 0.9)';
        overlay.style.display = 'flex';
        overlay.style.justifyContent = 'center';
        overlay.style.alignItems = 'center';
        overlay.style.zIndex = '9999';
        overlay.style.cursor = 'zoom-out';
        
        // Créer l'image agrandie
        const zoomedImg = document.createElement('img');
        zoomedImg.src = this.src;
        zoomedImg.alt = this.alt;
        zoomedImg.style.maxWidth = '90%';
        zoomedImg.style.maxHeight = '90%';
        
        // Ajouter l'image à l'overlay
        overlay.appendChild(zoomedImg);
        
        // Ajouter l'overlay au body
        document.body.appendChild(overlay);
        document.body.style.overflow = 'hidden';
        
        // Fermer au clic
        overlay.addEventListener('click', function() {
          document.body.removeChild(overlay);
          document.body.style.overflow = '';
          
          // Redémarrer l'autoplay
          if (swiper.autoplay) {
            swiper.autoplay.start();
          }
        });
      });
    });
  });
});
  </script>
  <style>
    
  </style>
</Layout>
